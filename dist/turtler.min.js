require=function b(c,d,e){function a(h,i){if(!d[h]){if(!c[h]){var j="function"==typeof require&&require;if(!i&&j)return j(h,!0);if(g)return g(h,!0);var k=new Error("Cannot find module '"+h+"'");throw k.code="MODULE_NOT_FOUND",k}var f=d[h]={exports:{}};c[h][0].call(f.exports,function(b){var d=c[h][1][b];return a(d?d:b)},f,f.exports,b,c,d,e)}return d[h].exports}for(var g="function"==typeof require&&require,f=0;f<e.length;f++)a(e[f]);return a}({turtler:[function(a,b){b.exports=function(a,b={}){if(!Array.isArray(a))throw new Error("data should be an array of arrays");let c="",d=0,e=[],{hasHeader:f=!0,columnSeparator:g=" | ",headerSeparator:h="="}=b;return a.forEach((a)=>{if(!Array.isArray(a))throw new Error("data should be an array of arrays");if(d||(d=a.length),d!==a.length)throw new Error("columns are not formed properly");a.forEach((a,b)=>{if("string"!=typeof a)throw new Error("column values should be strings");(!e[b]||e[b]<a.length)&&(e[b]=a.length)})}),a.forEach((a,b)=>{if(a=a.map((a,b)=>{let c=" ".repeat(e[b]-a.length);return a+c}).join(g),c+=`${a}\n`,0===b){if(!f||!h)return;c+=h[0].repeat(e.reduce((c,a)=>c+a)+g.length)+"\n"}}),c}},{}]},{},[]);